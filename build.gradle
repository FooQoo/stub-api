buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'groovy'
    id 'com.github.spotbugs' version '4.6.0'
    id 'jacoco'
}

group = 'com.fooqoo56.dev'
version = '1.0.0'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(
            'org.springframework.boot:spring-boot-starter-validation',
            'org.springframework.boot:spring-boot-starter-webflux',
            'org.apache.commons:commons-lang3:3.11',
            'com.squareup.okhttp3:okhttp:4.9.0',
            'org.springdoc:springdoc-openapi-webflux-ui:1.5.10',
            'org.springframework.boot:spring-boot-starter-actuator',
            'io.micrometer:micrometer-registry-prometheus'
    )
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation(
            // spring boot test framework
            'org.springframework.boot:spring-boot-starter-test',
            // test library for webflux
            'io.projectreactor:reactor-test',
            // spock
            'org.spockframework:spock-core:2.0-groovy-3.0',
            // spock for spring boot
            'org.spockframework:spock-spring:2.0-groovy-3.0',
            // library for spock
            'cglib:cglib-nodep:3.3.0',
            // mock for webflux
            'com.squareup.okhttp3:mockwebserver:4.9.0'
    )

    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.10.1'
}

test {
    useJUnitPlatform()
    testLogging {
        // テスト時の標準出力と標準エラー出力を表示する
        showStandardStreams true
        // イベントを出力する (TestLogEvent)
        events 'started', 'skipped', 'passed', 'failed'
    }
}

spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
    excludeFilter = file('./config/spotbugs_filter.xml')
}

spotbugsTest {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/spotbugsTest.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
    excludeFilter = file('./config/spotbugs_filter.xml')
}

test.finalizedBy jacocoTestReport

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(
                    dir: it,
                    exclude: [
                            '**/*Application.class',
                            '**/*Exception.class',
                            '**/config/**',
                            '**/*Sandbox*.class',
                            '**/function/**'
                    ]
            )
        }))
    }
}